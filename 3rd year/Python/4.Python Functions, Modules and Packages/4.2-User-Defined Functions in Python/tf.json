[
    {
      "id": 1,
      "question": "It is true that user-defined functions in Python are blocks of reusable code.",
      "answer": true
    },
    {
      "id": 2,
      "question": "It is true that user-defined functions in Python are not reusable.",
      "answer": false
    },
    {
      "id": 3,
      "question": "It is true that user-defined functions in Python are defined using the def keyword.",
      "answer": true
    },
    {
      "id": 4,
      "question": "It is true that user-defined functions in Python are defined using the class keyword.",
      "answer": false
    },
    {
      "id": 5,
      "question": "It is true that user-defined functions in Python must be defined before they are called.",
      "answer": true
    },
    {
      "id": 6,
      "question": "It is true that user-defined functions in Python do not need to be defined before they are called.",
      "answer": false
    },
    {
      "id": 7,
      "question": "It is true that user-defined functions in Python can take arguments.",
      "answer": true
    },
    {
      "id": 8,
      "question": "It is true that user-defined functions in Python cannot take arguments.",
      "answer": false
    },
    {
      "id": 9,
      "question": "It is true that the return statement in Python is optional for user-defined functions.",
      "answer": true
    },
    {
      "id": 10,
      "question": "It is true that the return statement in Python is mandatory for user-defined functions.",
      "answer": false
    },
    {
      "id": 11,
      "question": "It is true that user-defined functions help in organizing and reusing code.",
      "answer": true
    },
    {
      "id": 12,
      "question": "It is true that user-defined functions do not help in organizing or reusing code.",
      "answer": false
    },
    {
      "id": 13,
      "question": "It is true that local variables in Python are defined inside a function.",
      "answer": true
    },
    {
      "id": 14,
      "question": "It is true that local variables in Python are defined outside a function.",
      "answer": false
    },
    {
      "id": 15,
      "question": "It is true that global variables in Python can be accessed inside and outside a function.",
      "answer": true
    },
    {
      "id": 16,
      "question": "It is true that global variables in Python cannot be accessed inside a function.",
      "answer": false
    },
    {
      "id": 17,
      "question": "It is true that the global keyword is used to modify global variables inside a function.",
      "answer": true
    },
    {
      "id": 18,
      "question": "It is true that the global keyword is not used to modify global variables inside a function.",
      "answer": false
    },
    {
      "id": 19,
      "question": "It is true that positional arguments are passed in order when calling a function.",
      "answer": true
    },
    {
      "id": 20,
      "question": "It is true that positional arguments are not passed in order when calling a function.",
      "answer": false
    },
    {
      "id": 21,
      "question": "It is true that default arguments in Python are used when no argument is provided.",
      "answer": true
    },
    {
      "id": 22,
      "question": "It is true that default arguments in Python are not used when no argument is provided.",
      "answer": false
    },
    {
      "id": 23,
      "question": "It is true that keyword arguments are passed using variable names.",
      "answer": true
    },
    {
      "id": 24,
      "question": "It is true that keyword arguments are not passed using variable names.",
      "answer": false
    },
    {
      "id": 25,
      "question": "It is true that variable-length arguments in Python allow multiple arguments.",
      "answer": true
    },
    {
      "id": 26,
      "question": "It is true that variable-length arguments in Python do not allow multiple arguments.",
      "answer": false
    },
    {
      "id": 27,
      "question": "It is true that *args is used for multiple positional arguments in Python.",
      "answer": true
    },
    {
      "id": 28,
      "question": "It is true that *args is not used for multiple positional arguments in Python.",
      "answer": false
    },
    {
      "id": 29,
      "question": "It is true that **kwargs is used for multiple keyword arguments in Python.",
      "answer": true
    },
    {
      "id": 30,
      "question": "It is true that **kwargs is not used for multiple keyword arguments in Python.",
      "answer": false
    },
    {
      "id": 31,
      "question": "It is true that user-defined functions in Python can be used to perform specific tasks repeatedly.",
      "answer": true
    },
    {
      "id": 32,
      "question": "It is true that user-defined functions in Python cannot be used to perform specific tasks repeatedly.",
      "answer": false
    },
    {
      "id": 33,
      "question": "It is true that user-defined functions in Python help in reducing code duplication.",
      "answer": true
    },
    {
      "id": 34,
      "question": "It is true that user-defined functions in Python do not help in reducing code duplication.",
      "answer": false
    },
    {
      "id": 35,
      "question": "It is true that user-defined functions in Python can improve code readability.",
      "answer": true
    },
    {
      "id": 36,
      "question": "It is true that user-defined functions in Python do not improve code readability.",
      "answer": false
    },
    {
      "id": 37,
      "question": "It is true that user-defined functions in Python can be used to encapsulate logic.",
      "answer": true
    },
    {
      "id": 38,
      "question": "It is true that user-defined functions in Python cannot be used to encapsulate logic.",
      "answer": false
    },
    {
      "id": 39,
      "question": "It is true that user-defined functions in Python can be reused across different parts of a program.",
      "answer": true
    },
    {
      "id": 40,
      "question": "It is true that user-defined functions in Python cannot be reused across different parts of a program.",
      "answer": false
    },
    {
      "id": 41,
      "question": "It is true that user-defined functions in Python are defined with a colon at the end of the function definition line.",
      "answer": true
    },
    {
      "id": 42,
      "question": "It is true that user-defined functions in Python are defined without a colon at the end of the function definition line.",
      "answer": false
    },
    {
      "id": 43,
      "question": "It is true that the code inside a user-defined function in Python must be indented.",
      "answer": true
    },
    {
      "id": 44,
      "question": "It is true that the code inside a user-defined function in Python does not need to be indented.",
      "answer": false
    },
    {
      "id": 45,
      "question": "It is true that user-defined functions in Python can be used to simplify complex operations.",
      "answer": true
    },
    {
      "id": 46,
      "question": "It is true that user-defined functions in Python cannot be used to simplify complex operations.",
      "answer": false
    },
    {
      "id": 47,
      "question": "It is true that user-defined functions in Python can be used to handle errors and exceptions.",
      "answer": true
    },
    {
      "id": 48,
      "question": "It is true that user-defined functions in Python cannot be used to handle errors and exceptions.",
      "answer": false
    },
    {
      "id": 49,
      "question": "It is true that user-defined functions in Python are essential for modular programming.",
      "answer": true
    },
    {
      "id": 50,
      "question": "It is true that user-defined functions in Python are not essential for modular programming.",
      "answer": false
    }
]
  